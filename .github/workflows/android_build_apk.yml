name: Android build apk artifact
on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      # This step checks out the code from the repository to the runner.
      - uses: actions/checkout@v4

      # Step 2: Install Yarn globally
      # Yarn is required to manage JavaScript dependencies for the project.
      - name: Install Yarn
        run: npm install -g yarn

      # Step 3: Install project dependencies
      # Installs all required dependencies listed in the package.json file.
      - name: Install dependencies
        run: yarn install

      # Step 4: Get the next version number
      # Automatically calculates the next version number using semantic versioning.
      - name: Get next version
        uses: reecetech/version-increment@2024.10.1
        id: next_version
        with:
          scheme: semver
          increment: patch

      # Step 5: Set up Java 17
      # Configures the runner with Java Development Kit (JDK) version 17.
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 17

      # Step 6: Build the Android APK
      # Runs the Gradle command to build a release APK.
      - name: Build Android Release
        run: |
          cd android && ./gradlew app:assembleRelease

      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v5
        with:
          fromTag: "${{ steps.next_version.outputs.current-version }}"
          toTag: "${{ github.sha }}"
          mode: "COMMIT"
          configurationJson: |
            {
              "template": "#{{CHANGELOG}}",
              "categories": [
                {
                    "title": "## Feature",
                    "labels": ["feat", "feature"]
                },
                {
                    "title": "## Fix",
                    "labels": ["fix", "bug"]
                },
                {
                    "title": "## Other",
                    "labels": []
                }
              ],
              "label_extractor": [
                {
                  "pattern": "^(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test){1}(\\([\\w\\-\\.]+\\))?(!)?: ([\\w ])+([\\s\\S]*)",
                  "target": "$1"
                }
              ]
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 7: Create a GitHub release with autogenerated release notes
      # Uploads the built APK as an artifact and auto-generates release notes based on commit history.
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: android/app/build/outputs/apk/release/app-release.apk
          tag_name: "${{ steps.next_version.outputs.version }}"
          name: "Release ${{ steps.next_version.outputs.version }}"
          generate_release_notes: false
          draft: false
          prerelease: false
          body: |
            ## What's Changed
            ${{ steps.github_release.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
